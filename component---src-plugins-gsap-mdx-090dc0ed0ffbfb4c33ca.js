(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{mOiY:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return m}));n("4cIV"),n("NZyX"),n("c0Gx"),n("QNbk"),n("+ytS"),n("WY76");var r=n("r0ML"),o=n("V0Ug"),a=n("sN0p"),i=n("EeHy"),s=n("3yzF"),l=n("Vo3s"),p=n("qf7+");n("xH0s");function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}l.a.registerPlugin(p.a);var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/plugins/GSAP.mdx"}});var b={_frontmatter:c},g=a.a;function m(e){var t,n=e.components,m=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(o.b)(g,u({},b,m,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"gsap-plugins"},"GSAP Plugins"),Object(o.b)("p",null,"There are some Core Plugins that are already included in GSAP: ",Object(o.b)("a",u({parentName:"p"},{href:"https://greensock.com/docs/v3/GSAP/CorePlugins"}),"https://greensock.com/docs/v3/GSAP/CorePlugins")),Object(o.b)("p",null,"And there are some free Plugins that you can use to extend the functionality. Here is the list: ",Object(o.b)("a",u({parentName:"p"},{href:"https://greensock.com/docs/v3/Plugins"}),"https://greensock.com/docs/v3/Plugins"),"."),Object(o.b)("p",null,"To use them with ",Object(o.b)("inlineCode",{parentName:"p"},"react-gsap")," you first have to register them."),Object(o.b)("h3",{id:"register-the-textplugin-for-example"},"Register the TextPlugin for example:"),Object(o.b)("pre",null,Object(o.b)("code",u({parentName:"pre"},{}),"import { gsap } from 'gsap';\nimport { TextPlugin } from 'gsap/TextPlugin';\n\n# if your build step doesn't transpile inside node_modules you can try this import:\nimport { TextPlugin } from 'gsap/dist/TextPlugin';\n\ngsap.registerPlugin(TextPlugin);\n")),Object(o.b)("h3",{id:"and-use-it"},"And use it:"),Object(o.b)(i.c,{__position:0,__code:"<Controls playState={PlayState.stop}>\n  <Tween to={{ text: 'This is the new text.' }} duration={2}>\n    <span>This is a text.</span>\n  </Tween>\n</Controls>",__scope:(t={props:m,DefaultLayout:a.a,Fragment:r.Fragment,Playground:i.c,Controls:s.a,PlayState:s.b,Tween:s.i,gsap:l.a,TextPlugin:p.a},t.DefaultLayout=a.a,t._frontmatter=c,t),mdxType:"Playground"},Object(o.b)(s.a,{playState:s.b.stop,mdxType:"Controls"},Object(o.b)(s.i,{to:{text:"This is the new text."},duration:2,mdxType:"Tween"},Object(o.b)("span",null,"This is a text.")))))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/plugins/GSAP.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-plugins-gsap-mdx-090dc0ed0ffbfb4c33ca.js.map