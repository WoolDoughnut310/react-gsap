(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{cLuf:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return f}));a("4cIV"),a("NZyX"),a("c0Gx"),a("QNbk"),a("+ytS"),a("WY76");var n=a("V0Ug"),o=a("sN0p"),s=a("r0ML"),r=a("EeHy"),c=a("3yzF"),p=a("Vo3s"),i=a("vDaZ");a("xH0s");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}p.a.registerPlugin(i.a);var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/instructions/Easing.mdx"}});var u={_frontmatter:b},d=o.a;function f(e){var t,a,f,m=e.components,g=function(e,t){if(null==e)return{};var a,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,["components"]);return Object(n.b)(d,l({},u,g,{components:m,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"easing"},"Easing"),Object(n.b)("p",null,'With GSAP 3 the easing functions are more easily usable as string without importing. They can be used in the "ease" prop of the ',Object(n.b)("inlineCode",{parentName:"p"},"Tween"),"."),Object(n.b)("p",null,"Have a look at the docs: ",Object(n.b)("a",l({parentName:"p"},{href:"https://greensock.com/docs/v3/Eases"}),"https://greensock.com/docs/v3/Eases")),Object(n.b)("p",null,"The default is ",Object(n.b)("inlineCode",{parentName:"p"},"power1.out"),". You can overide the defaults if you want: ",Object(n.b)("a",l({parentName:"p"},{href:"https://greensock.com/docs/v3/GSAP/gsap.defaults()"}),"https://greensock.com/docs/v3/GSAP/gsap.defaults()"),"."),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{}),"import { Controls, PlayState, Tween } from 'react-gsap';\n")),Object(n.b)("h2",{id:"ease-function-with-parameters"},"Ease function with parameters"),Object(n.b)(r.c,{__position:0,__code:"<Controls playState={PlayState.stop}>\n  <Tween to={{ x: '200px' }} duration={2} ease=\"elastic.out(0.9, 0.1)\">\n    <div style={{ width: '100px', height: '100px', background: '#ccc' }} />\n  </Tween>\n</Controls>",__scope:(t={props:g,DefaultLayout:o.a,Fragment:s.Fragment,Playground:r.c,Controls:c.a,PlayState:c.b,Tween:c.f,gsap:p.a,SlowMo:i.a},t.DefaultLayout=o.a,t._frontmatter=b,t),mdxType:"Playground"},Object(n.b)(c.a,{playState:c.b.stop,mdxType:"Controls"},Object(n.b)(c.f,{to:{x:"200px"},duration:2,ease:"elastic.out(0.9, 0.1)",mdxType:"Tween"},Object(n.b)("div",{style:{width:"100px",height:"100px",background:"#ccc"}})))),Object(n.b)("h2",{id:"slowmo-ease"},"SlowMo ease"),Object(n.b)("p",null,"This is an extra ease that has to be registered first:"),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{}),"import { gsap } from 'gsap';\nimport { SlowMo } from 'gsap/EasePack';\n\ngsap.registerPlugin(SlowMo);\n")),Object(n.b)(r.c,{__position:1,__code:"<Controls playState={PlayState.stop}>\n  <Tween to={{ x: '200px' }} duration={2} ease=\"slow(0.5, 0.8)\">\n    <div style={{ width: '100px', height: '100px', background: '#ccc' }} />\n  </Tween>\n</Controls>",__scope:(a={props:g,DefaultLayout:o.a,Fragment:s.Fragment,Playground:r.c,Controls:c.a,PlayState:c.b,Tween:c.f,gsap:p.a,SlowMo:i.a},a.DefaultLayout=o.a,a._frontmatter=b,a),mdxType:"Playground"},Object(n.b)(c.a,{playState:c.b.stop,mdxType:"Controls"},Object(n.b)(c.f,{to:{x:"200px"},duration:2,ease:"slow(0.5, 0.8)",mdxType:"Tween"},Object(n.b)("div",{style:{width:"100px",height:"100px",background:"#ccc"}})))),Object(n.b)("h2",{id:"custom-easing-function"},"Custom easing function"),Object(n.b)("p",null,"You can also pass a function to the ease prop. In this way you can have your custom easing functions."),Object(n.b)("p",null,"In the example it's an ",Object(n.b)("inlineCode",{parentName:"p"},"easeInOutQuart"),". Take a look at this resource for inspiration: ",Object(n.b)("a",l({parentName:"p"},{href:"https://easings.net/"}),"https://easings.net/")),Object(n.b)(r.c,{__position:2,__code:"<Controls playState={PlayState.stop}>\n  <Tween\n    to={{ x: '200px' }}\n    duration={2}\n    ease={x =>\n      x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2\n    }\n  >\n    <div style={{ width: '100px', height: '100px', background: '#ccc' }} />\n  </Tween>\n</Controls>",__scope:(f={props:g,DefaultLayout:o.a,Fragment:s.Fragment,Playground:r.c,Controls:c.a,PlayState:c.b,Tween:c.f,gsap:p.a,SlowMo:i.a},f.DefaultLayout=o.a,f._frontmatter=b,f),mdxType:"Playground"},Object(n.b)(c.a,{playState:c.b.stop,mdxType:"Controls"},Object(n.b)(c.f,{to:{x:"200px"},duration:2,ease:function(e){return e<.5?8*e*e*e*e:1-Math.pow(-2*e+2,4)/2},mdxType:"Tween"},Object(n.b)("div",{style:{width:"100px",height:"100px",background:"#ccc"}})))))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/instructions/Easing.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-instructions-easing-mdx-186cb6fa8c4c0fd23b5c.js.map