{"version":3,"sources":["webpack:///../src/plugins/GSAP.mdx"],"names":["gsap","registerPlugin","TextPlugin","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","Controls","PlayState","Tween","playState","stop","to","text","duration","isMDXComponent"],"mappings":"qiBAWAA,IAAKC,eAAeC,KACb,IAAMC,EAAe,Q,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,uFAAsE,mBAAGC,WAAW,KAAQ,CACxF,KAAQ,mDAD0D,mDAGtE,wHAAuG,mBAAGA,WAAW,KAAQ,CACzH,KAAQ,0CAD2F,yCAAvG,KAGA,yCAAwB,0BAAYA,WAAW,KAAvB,cAAxB,qCACA,iBAAQ,CACN,GAAM,uCADR,wCAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sHAKL,iBAAQ,CACN,GAAM,cADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kKAAqKC,SAAO,GAC7ML,QACAH,kBACAS,oBACAC,eACAC,aACAC,cACAC,UACAnB,SACAE,gBAT6M,gBAU7MI,IAV6M,EAW7MH,eAX6M,GAY5MO,QAAQ,cACb,YAAC,IAAD,CAAUU,UAAWF,IAAUG,KAAMX,QAAQ,YAC3C,YAAC,IAAD,CAAOY,GAAI,CACLC,KAAM,yBACLC,SAAU,EAAGd,QAAQ,SAC1B,oD,oMAQNH,EAAWkB,gBAAiB","file":"component---src-plugins-gsap-mdx-2bc285860902a1d049ae.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground } from 'docz';\nimport { Controls, PlayState, Tween } from './../../../react-gsap/src/';\nimport { gsap } from 'gsap';\nimport { TextPlugin } from 'gsap/TextPlugin';\ngsap.registerPlugin(TextPlugin);\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"gsap-plugins\"\n    }}>{`GSAP Plugins`}</h1>\n    <p>{`There are some Core Plugins that are already included in GSAP: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/GSAP/CorePlugins\"\n      }}>{`https://greensock.com/docs/v3/GSAP/CorePlugins`}</a></p>\n    <p>{`And there are some free Plugins that you can use to extend the functionality. Here is the list: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/Plugins\"\n      }}>{`https://greensock.com/docs/v3/Plugins`}</a>{`.`}</p>\n    <p>{`To use them with `}<inlineCode parentName=\"p\">{`react-gsap`}</inlineCode>{` you first have to register them.`}</p>\n    <h3 {...{\n      \"id\": \"register-the-textplugin-for-example\"\n    }}>{`Register the TextPlugin for example:`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`import { gsap } from 'gsap';\nimport { TextPlugin } from 'gsap/TextPlugin';\n\ngsap.registerPlugin(TextPlugin);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"and-use-it\"\n    }}>{`And use it:`}</h3>\n    <Playground __position={0} __code={'<Controls playState={PlayState.stop}>\\n  <Tween to={{ text: \\'This is the new text.\\' }} duration={2}>\\n    <span>This is a text.</span>\\n  </Tween>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Controls,\n      PlayState,\n      Tween,\n      gsap,\n      TextPlugin,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Tween to={{\n          text: 'This is the new text.'\n        }} duration={2} mdxType=\"Tween\">\n      <span>This is a text.</span>\n    </Tween>\n  </Controls>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}