(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{lcKZ:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return u})),n.d(e,"default",(function(){return b}));n("4cIV"),n("NZyX"),n("c0Gx"),n("QNbk"),n("+ytS"),n("WY76");var a=n("r0ML"),r=n("V0Ug"),o=n("sN0p"),s=n("EeHy"),l=n("3yzF");n("xH0s");function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/instructions/PlayState.mdx"}});var i={_frontmatter:u},c=o.a;function b(t){var e,n=t.components,b=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,["components"]);return Object(r.b)(c,p({},i,b,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"use-playstate-and-totalprogress-props"},"Use playState and totalProgress props"),Object(r.b)("p",null,"With the playState and progress/totalProgress props you can control a Tween or a Timeline.\nSo you don't need low-level access to play/reverse/pause/stop or seek to a position."),Object(r.b)("p",null,"From version 3.2.0 on the ",Object(r.b)("inlineCode",{parentName:"p"},"playState")," prop also works for the initial state and the following states were added:\n",Object(r.b)("inlineCode",{parentName:"p"},"restartReverse"),", ",Object(r.b)("inlineCode",{parentName:"p"},"stopEnd"),", ",Object(r.b)("inlineCode",{parentName:"p"},"resume"),"."),Object(r.b)("p",null,"The following gsap functions are called internally, if the ",Object(r.b)("inlineCode",{parentName:"p"},"playState")," prop change:"),Object(r.b)("pre",null,Object(r.b)("code",p({parentName:"pre"},{}),"if (playState === PlayState.play) {\n  gsap.play();\n} else if (playState === PlayState.restart) {\n  gsap.restart(true);\n} else if (playState === PlayState.reverse) {\n  gsap.reverse();\n} else if (playState === PlayState.restartReverse) {\n  gsap.reverse(0);\n} else if (playState === PlayState.stop) {\n  gsap.pause(0);\n} else if (playState === PlayState.stopEnd) {\n  gsap.reverse(0);\n  gsap.pause();\n} else if (playState === PlayState.pause) {\n  gsap.pause();\n} else if (playState === PlayState.resume) {\n  gsap.resume();\n}\n")),Object(r.b)(s.c,{__position:0,__code:"() => {\n  const [playState, setPlayState] = React.useState(PlayState.pause)\n  const [totalProgress, setTotalProgress] = React.useState(0)\n  return (\n    <Fragment>\n      <Tween\n        to={{ x: '300px' }}\n        duration={2}\n        playState={playState}\n        totalProgress={totalProgress}\n      >\n        <div\n          style={{ width: '100px', height: '100px', background: '#ccc' }}\n        />\n      </Tween>\n      <button onClick={() => setPlayState(PlayState.play)}>play</button>\n      <button onClick={() => setPlayState(PlayState.restart)}>restart</button>\n      <button onClick={() => setPlayState(PlayState.reverse)}>reverse</button>\n      <button onClick={() => setPlayState(PlayState.restartReverse)}>\n        restartReverse\n      </button>\n      <button onClick={() => setPlayState(PlayState.stop)}>stop</button>\n      <button onClick={() => setPlayState(PlayState.stopEnd)}>stopEnd</button>\n      <button onClick={() => setPlayState(PlayState.pause)}>pause</button>\n      <button onClick={() => setPlayState(PlayState.resume)}>resume</button>\n      <div>\n        <input\n          type=\"range\"\n          max=\"1\"\n          step=\"0.001\"\n          value={totalProgress}\n          onChange={event => setTotalProgress(event.target.value)}\n        />\n      </div>\n    </Fragment>\n  )\n}",__scope:(e={props:b,DefaultLayout:o.a,Fragment:a.Fragment,Playground:s.c,PlayState:l.b,Tween:l.i},e.DefaultLayout=o.a,e._frontmatter=u,e),mdxType:"Playground"},(function(){var t=a.useState(l.b.pause),e=t[0],n=t[1],o=a.useState(0),s=o[0],p=o[1];return Object(r.b)(a.Fragment,{mdxType:"Fragment"},Object(r.b)(l.i,{to:{x:"300px"},duration:2,playState:e,totalProgress:s,mdxType:"Tween"},Object(r.b)("div",{style:{width:"100px",height:"100px",background:"#ccc"}})),Object(r.b)("button",{onClick:function(){return n(l.b.play)}},"play"),Object(r.b)("button",{onClick:function(){return n(l.b.restart)}},"restart"),Object(r.b)("button",{onClick:function(){return n(l.b.reverse)}},"reverse"),Object(r.b)("button",{onClick:function(){return n(l.b.restartReverse)}},"restartReverse"),Object(r.b)("button",{onClick:function(){return n(l.b.stop)}},"stop"),Object(r.b)("button",{onClick:function(){return n(l.b.stopEnd)}},"stopEnd"),Object(r.b)("button",{onClick:function(){return n(l.b.pause)}},"pause"),Object(r.b)("button",{onClick:function(){return n(l.b.resume)}},"resume"),Object(r.b)("div",null,Object(r.b)("input",{type:"range",max:"1",step:"0.001",value:s,onChange:function(t){return p(t.target.value)}})))})))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/instructions/PlayState.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-instructions-play-state-mdx-d9d25acf2aed7979f140.js.map