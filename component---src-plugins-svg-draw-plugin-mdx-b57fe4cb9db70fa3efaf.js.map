{"version":3,"sources":["webpack:///../src/plugins/SvgDrawPlugin.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","Props","Controls","PlayState","Tween","playState","stop","width","height","viewBox","version","xmlns","from","svgDraw","to","r","stroke","strokeWidth","fill","duration","x","y","rx","ry","cx","cy","x1","x2","y1","y2","points","d","isMDXComponent"],"mappings":"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","file":"component---src-plugins-svg-draw-plugin-mdx-b57fe4cb9db70fa3efaf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Controls, PlayState, Tween } from './../../../react-gsap/src/';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"svgdrawplugin\"\n    }}>{`SvgDrawPlugin`}</h1>\n    <p>{`The SvgDrawPlugin is shipped with react-gsap and lets you animate SVG elements.\nYou can draw the following SVG elements: path, circle, rect, line, polyline and polygon.`}</p>\n    <p>{`It works similar to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/drawSVG\"\n      }}>{`DrawSVGPlugin`}</a>{` from GreenSock but the parameters are a little different.`}</p>\n    <p>{`It can be called with the \"svgDraw\" property and takes a single number (0-1) value or an array with two numbers (Tuple) (`}{`[(0-1), (0-1)]`}{`).`}</p>\n    <p>{`The single or first number is the length of the stroke.`}</p>\n    <p>{`The second value is the position/offset on the path. (default = 0)`}</p>\n    <p>{`So you can animate a line drawing from start to end like that:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Controls, PlayState, Tween } from 'react-gsap';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"single-number\"\n    }}>{`Single Number`}</h2>\n    <Playground __position={0} __code={'<Controls playState={PlayState.stop}>\\n  <svg\\n    width=\\\"200\\\"\\n    height=\\\"200\\\"\\n    viewBox=\\\"-55 -55 110 110\\\"\\n    version=\\\"1.1\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <Tween\\n      from={{\\n        svgDraw: 0,\\n      }}\\n      to={{\\n        svgDraw: 1,\\n      }}\\n    >\\n      <circle r=\\\"50\\\" stroke=\\\"red\\\" strokeWidth=\\\"5\\\" fill=\\\"transparent\\\" />\\n    </Tween>\\n  </svg>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <svg width=\"200\" height=\"200\" viewBox=\"-55 -55 110 110\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <Tween from={{\n            svgDraw: 0\n          }} to={{\n            svgDraw: 1\n          }} mdxType=\"Tween\">\n        <circle r=\"50\" stroke=\"red\" strokeWidth=\"5\" fill=\"transparent\" />\n      </Tween>\n    </svg>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tuple\"\n    }}>{`Tuple`}</h2>\n    <p>{`An animation from the middle to the outside:`}</p>\n    <Playground __position={1} __code={'<Controls playState={PlayState.stop}>\\n  <svg\\n    width=\\\"200\\\"\\n    height=\\\"200\\\"\\n    viewBox=\\\"-55 -55 110 110\\\"\\n    version=\\\"1.1\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <Tween\\n      from={{\\n        svgDraw: [0, 0.5],\\n      }}\\n      to={{\\n        svgDraw: [1, 0],\\n      }}\\n    >\\n      <circle r=\\\"50\\\" stroke=\\\"red\\\" strokeWidth=\\\"5\\\" fill=\\\"transparent\\\" />\\n    </Tween>\\n  </svg>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <svg width=\"200\" height=\"200\" viewBox=\"-55 -55 110 110\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <Tween from={{\n            svgDraw: [0, 0.5]\n          }} to={{\n            svgDraw: [1, 0]\n          }} mdxType=\"Tween\">\n        <circle r=\"50\" stroke=\"red\" strokeWidth=\"5\" fill=\"transparent\" />\n      </Tween>\n    </svg>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"all-possible-svg-elements\"\n    }}>{`All possible SVG elements`}</h2>\n    <Playground __position={2} __code={'<Controls playState={PlayState.stop}>\\n  <svg\\n    width=\\\"200\\\"\\n    height=\\\"250\\\"\\n    version=\\\"1.1\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <Tween\\n      from={{\\n        svgDraw: 0,\\n      }}\\n      to={{\\n        svgDraw: 1,\\n      }}\\n      duration={2}\\n    >\\n      <rect\\n        x=\\\"10\\\"\\n        y=\\\"10\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        stroke=\\\"black\\\"\\n        fill=\\\"transparent\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <rect\\n        x=\\\"60\\\"\\n        y=\\\"10\\\"\\n        rx=\\\"10\\\"\\n        ry=\\\"10\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        stroke=\\\"black\\\"\\n        fill=\\\"transparent\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <circle\\n        cx=\\\"25\\\"\\n        cy=\\\"75\\\"\\n        r=\\\"20\\\"\\n        stroke=\\\"red\\\"\\n        fill=\\\"transparent\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <ellipse\\n        cx=\\\"75\\\"\\n        cy=\\\"75\\\"\\n        rx=\\\"20\\\"\\n        ry=\\\"5\\\"\\n        stroke=\\\"red\\\"\\n        fill=\\\"transparent\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <line\\n        x1=\\\"10\\\"\\n        x2=\\\"50\\\"\\n        y1=\\\"110\\\"\\n        y2=\\\"150\\\"\\n        stroke=\\\"orange\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <polyline\\n        points=\\\"60 110 65 120 70 115 75 130 80 125 85 140 90 135 95 150 100 145\\\"\\n        stroke=\\\"orange\\\"\\n        fill=\\\"transparent\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <polygon\\n        points=\\\"50 160 55 180 70 180 60 190 65 205 50 195 35 205 40 190 30 180 45 180\\\"\\n        stroke=\\\"green\\\"\\n        fill=\\\"transparent\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n      <path\\n        d=\\\"M20,230 Q40,205 50,230 T90,230\\\"\\n        fill=\\\"none\\\"\\n        stroke=\\\"blue\\\"\\n        strokeWidth=\\\"5\\\"\\n      />\\n    </Tween>\\n  </svg>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <svg width=\"200\" height=\"250\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <Tween from={{\n            svgDraw: 0\n          }} to={{\n            svgDraw: 1\n          }} duration={2} mdxType=\"Tween\">\n        <rect x=\"10\" y=\"10\" width=\"30\" height=\"30\" stroke=\"black\" fill=\"transparent\" strokeWidth=\"5\" />\n        <rect x=\"60\" y=\"10\" rx=\"10\" ry=\"10\" width=\"30\" height=\"30\" stroke=\"black\" fill=\"transparent\" strokeWidth=\"5\" />\n        <circle cx=\"25\" cy=\"75\" r=\"20\" stroke=\"red\" fill=\"transparent\" strokeWidth=\"5\" />\n        <ellipse cx=\"75\" cy=\"75\" rx=\"20\" ry=\"5\" stroke=\"red\" fill=\"transparent\" strokeWidth=\"5\" />\n        <line x1=\"10\" x2=\"50\" y1=\"110\" y2=\"150\" stroke=\"orange\" strokeWidth=\"5\" />\n        <polyline points=\"60 110 65 120 70 115 75 130 80 125 85 140 90 135 95 150 100 145\" stroke=\"orange\" fill=\"transparent\" strokeWidth=\"5\" />\n        <polygon points=\"50 160 55 180 70 180 60 190 65 205 50 195 35 205 40 190 30 180 45 180\" stroke=\"green\" fill=\"transparent\" strokeWidth=\"5\" />\n        <path d=\"M20,230 Q40,205 50,230 T90,230\" fill=\"none\" stroke=\"blue\" strokeWidth=\"5\" />\n      </Tween>\n    </svg>\n  </Controls>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}