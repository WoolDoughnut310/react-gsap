{"version":3,"sources":["webpack:///../src/plugins/CountPlugin.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","Props","Controls","PlayState","Timeline","Tween","playState","stop","style","width","height","background","textAlign","to","count","ease","duration","fontSize","lineHeight","value","format","toFixed","parseInt","position","border","isMDXComponent"],"mappings":"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","file":"component---src-plugins-count-plugin-mdx-02242adec0b711159f2e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Controls, PlayState, Timeline, Tween } from './../../../react-gsap/src/';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"countplugin\"\n    }}>{`CountPlugin`}</h1>\n    <p>{`The CountPlugin animates an number counting. It uses the innerText from the target elements. (children)`}</p>\n    <p>{`It can be called with the \"count\" property which takes an number or an object with the following properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`number`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`format`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`() => (value) => string`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Controls, PlayState, Tween } from 'react-gsap';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"integer\"\n    }}>{`Integer`}</h2>\n    <p>{`By default the count value will be parsed to an integer.`}</p>\n    <Playground __position={0} __code={'<Controls playState={PlayState.stop}>\\n  <div\\n    style={{\\n      width: \\'70px\\',\\n      height: \\'70px\\',\\n      background: \\'#ccc\\',\\n      textAlign: \\'center\\',\\n    }}\\n  >\\n    <Tween\\n      to={{\\n        count: 100,\\n      }}\\n      ease=\\\"none\\\"\\n      duration={5}\\n    >\\n      <div style={{ fontSize: \\'40px\\', lineHeight: \\'70px\\' }}>0</div>\\n    </Tween>\\n  </div>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <div style={{\n          width: '70px',\n          height: '70px',\n          background: '#ccc',\n          textAlign: 'center'\n        }}>\n      <Tween to={{\n            count: 100\n          }} ease=\"none\" duration={5} mdxType=\"Tween\">\n        <div style={{\n              fontSize: '40px',\n              lineHeight: '70px'\n            }}>0</div>\n      </Tween>\n    </div>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-format-function\"\n    }}>{`Custom format function`}</h2>\n    <p>{`You can use your own custom format function.`}</p>\n    <Playground __position={1} __code={'<Controls playState={PlayState.stop}>\\n  <div\\n    style={{\\n      width: \\'100px\\',\\n      height: \\'70px\\',\\n      background: \\'#ccc\\',\\n      textAlign: \\'center\\',\\n    }}\\n  >\\n    <Tween\\n      to={{\\n        count: {\\n          value: 100,\\n          format: () => value => value.toFixed(2),\\n        },\\n      }}\\n      ease=\\\"none\\\"\\n      duration={5}\\n    >\\n      <div style={{ fontSize: \\'30px\\', lineHeight: \\'70px\\' }}>10.00</div>\\n    </Tween>\\n  </div>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <div style={{\n          width: '100px',\n          height: '70px',\n          background: '#ccc',\n          textAlign: 'center'\n        }}>\n      <Tween to={{\n            count: {\n              value: 100,\n              format: () => value => value.toFixed(2)\n            }\n          }} ease=\"none\" duration={5} mdxType=\"Tween\">\n        <div style={{\n              fontSize: '30px',\n              lineHeight: '70px'\n            }}>10.00</div>\n      </Tween>\n    </div>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"percentage-bar\"\n    }}>{`Percentage Bar`}</h2>\n    <Playground __position={2} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline>\\n    <Tween\\n      to={{\\n        count: {\\n          value: 100,\\n          format: () => value => `${parseInt(value, 10)} %`,\\n        },\\n      }}\\n      ease=\\\"none\\\"\\n      duration={5}\\n      position={0}\\n    >\\n      <div style={{ fontSize: \\'30px\\' }}>0 %</div>\\n    </Tween>\\n    <div\\n      style={{ width: \\'300px\\', height: \\'30px\\', border: \\'2px solid black\\' }}\\n    >\\n      <Tween\\n        to={{\\n          width: \\'300px\\',\\n          background: \\'green\\',\\n        }}\\n        ease=\\\"none\\\"\\n        duration={5}\\n        position={0}\\n      >\\n        <div style={{ width: \\'0px\\', height: \\'30px\\', background: \\'red\\' }} />\\n      </Tween>\\n    </div>\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline mdxType=\"Timeline\">\n      <Tween to={{\n            count: {\n              value: 100,\n              format: () => value => `${parseInt(value, 10)} %`\n            }\n          }} ease=\"none\" duration={5} position={0} mdxType=\"Tween\">\n        <div style={{\n              fontSize: '30px'\n            }}>0 %</div>\n      </Tween>\n      <div style={{\n            width: '300px',\n            height: '30px',\n            border: '2px solid black'\n          }}>\n        <Tween to={{\n              width: '300px',\n              background: 'green'\n            }} ease=\"none\" duration={5} position={0} mdxType=\"Tween\">\n          <div style={{\n                width: '0px',\n                height: '30px',\n                background: 'red'\n              }} />\n        </Tween>\n      </div>\n    </Timeline>\n  </Controls>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}