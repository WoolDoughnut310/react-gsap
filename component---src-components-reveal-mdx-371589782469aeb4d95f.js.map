{"version":3,"sources":["webpack:///../src/components/Reveal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","Props","Reveal","SplitLetters","Tween","Comment","FadeInLeft","AnimationTrigger","RubberBand","repeat","from","opacity","duration","trigger","threshold","isMDXComponent"],"mappings":"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","file":"component---src-components-reveal-mdx-371589782469aeb4d95f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Reveal, SplitLetters } from './../../../react-gsap/src/';\nimport { Tween, Comment } from './Tween';\nimport { FadeInLeft, AnimationTrigger, RubberBand } from './Animation';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"reveal\"\n    }}>{`Reveal`}</h1>\n    <p>{`The Reveal component is basically an Intersection Observer and a Timeline component combined.`}</p>\n    <p>{`All children Tween and Timeline components get played when they are visible in viewport.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Reveal, Tween } from 'react-gsap';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage-with-tween\"\n    }}>{`Usage with Tween`}</h2>\n    <p>{`Add a little space for testing`}</p>\n    <p>{`|`}</p>\n    <p>{`so scroll down`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <p>{`|`}</p>\n    <Playground __position={0} __code={'<Reveal repeat>\\n  <Tween from={{ opacity: 0 }} duration={2}>\\n    <h3>This headline is fading in</h3>\\n  </Tween>\\n</Reveal>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Reveal,\n      SplitLetters,\n      Tween,\n      Comment,\n      FadeInLeft,\n      AnimationTrigger,\n      RubberBand,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Reveal repeat mdxType=\"Reveal\">\n    <Tween from={{\n          opacity: 0\n        }} duration={2} mdxType=\"Tween\">\n      <h3>This headline is fading in</h3>\n    </Tween>\n  </Reveal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"fade-in-from-left-example\"\n    }}>{`Fade in from left example`}</h2>\n    <p>{`Of course you can outsource animations to separate components. In this example a FadeInLeft animation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const FadeInLeft = ({ children }) => (\n  <Tween\n    from={{ opacity: 0, transform: 'translate3d(-100vw, 0, 0)' }}\n    ease=\"back.out(1.4)\"\n  >\n    {children}\n  </Tween>\n);\n`}</code></pre>\n    <p>{`Also note the use of the `}<inlineCode parentName=\"p\">{`trigger`}</inlineCode>{` prop.\nIn this case the `}<inlineCode parentName=\"p\">{`<H3>`}</inlineCode>{` wouldn't trigger because it's out of the viewport initially: `}<inlineCode parentName=\"p\">{`translate3d(-100vw, 0, 0)`}</inlineCode>{`\nIf no trigger is passed, the first element from any child Tween or Timeline that gets beyond the threshold is used.`}</p>\n    <Playground __position={1} __code={'<Reveal repeat trigger={<div />}>\\n  <FadeInLeft>\\n    <h3>This headline is coming from left</h3>\\n  </FadeInLeft>\\n</Reveal>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Reveal,\n      SplitLetters,\n      Tween,\n      Comment,\n      FadeInLeft,\n      AnimationTrigger,\n      RubberBand,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Reveal repeat trigger={<div />} mdxType=\"Reveal\">\n    <FadeInLeft mdxType=\"FadeInLeft\">\n      <h3>This headline is coming from left</h3>\n    </FadeInLeft>\n  </Reveal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"forwardref-trigger\"\n    }}>{`forwardRef trigger`}</h2>\n    <p>{`You can also create a forwardRef component as trigger if you need a more complex wrapper or trigger.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const AnimationTrigger = React.forwardRef<HTMLDivElement>(({ children }, ref) => (\n  <div\n    ref={ref}\n    style={{\n      paddingTop: '200px',\n      paddingBottom: '200px',\n      background: '#f0f0f0',\n      textAlign: 'center',\n    }}\n  >\n    {children}\n  </div>\n));\n\n`}</code></pre>\n    <Playground __position={2} __code={'<Reveal repeat threshold={1} trigger={<AnimationTrigger />}>\\n  <RubberBand>\\n    <h2>I get triggered later</h2>\\n  </RubberBand>\\n</Reveal>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Reveal,\n      SplitLetters,\n      Tween,\n      Comment,\n      FadeInLeft,\n      AnimationTrigger,\n      RubberBand,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Reveal repeat threshold={1} trigger={<AnimationTrigger mdxType=\"AnimationTrigger\" />} mdxType=\"Reveal\">\n    <RubberBand mdxType=\"RubberBand\">\n      <h2>I get triggered later</h2>\n    </RubberBand>\n  </Reveal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`trigger?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`React.ReactElement `}{`|`}{` null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`This element triggers the animation if it gets into view. Needs to be a \"refable\" element like HTML element or forwardRef component`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`repeat?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Trigger the animation again and again?`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`root?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element `}{`|`}{` null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`rootMargin?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`threshold?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0.66`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`As opposed to the threshold value from IntersectionObserver options this is just a single number`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}