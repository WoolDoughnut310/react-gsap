{"version":3,"sources":["webpack:///../src/instructions/Easing.mdx"],"names":["gsap","registerPlugin","SlowMo","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","Controls","PlayState","Tween","playState","stop","to","x","duration","ease","style","width","height","background","Math","pow","isMDXComponent"],"mappings":"qiBAWAA,IAAKC,eAAeC,KACb,IAAMC,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,UADR,UAGA,wJAAuI,0BAAYC,WAAW,KAAvB,SAAvI,KACA,iDAAgC,mBAAGA,WAAW,KAAQ,CAClD,KAAQ,wCADoB,wCAGhC,uCAAsB,0BAAYA,WAAW,KAAvB,cAAtB,+CAA4H,mBAAGA,WAAW,KAAQ,CAC9I,KAAQ,uDADgH,sDAA5H,KAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,+DAEL,iBAAQ,CACN,GAAM,iCADR,iCAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yNAAkOC,SAAO,GAC1QL,QACAH,kBACAS,oBACAC,eACAC,aACAC,cACAC,UACAnB,SACAE,YAT0Q,gBAU1QI,IAV0Q,EAW1QH,eAX0Q,GAYzQO,QAAQ,cACb,YAAC,IAAD,CAAUU,UAAWF,IAAUG,KAAMX,QAAQ,YAC3C,YAAC,IAAD,CAAOY,GAAI,CACLC,EAAG,SACFC,SAAU,EAAGC,KAAK,wBAAwBf,QAAQ,SACvD,mBAAKgB,MAAO,CACNC,MAAO,QACPC,OAAQ,QACRC,WAAY,aAKpB,iBAAQ,CACN,GAAM,eADR,eAGA,+EACA,uBAAK,sBAAMlB,WAAW,OAAU,IAA3B,4GAKL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kNAA2NC,SAAO,GACnQL,QACAH,kBACAS,oBACAC,eACAC,aACAC,cACAC,UACAnB,SACAE,YATmQ,gBAUnQI,IAVmQ,EAWnQH,eAXmQ,GAYlQO,QAAQ,cACb,YAAC,IAAD,CAAUU,UAAWF,IAAUG,KAAMX,QAAQ,YAC3C,YAAC,IAAD,CAAOY,GAAI,CACLC,EAAG,SACFC,SAAU,EAAGC,KAAK,iBAAiBf,QAAQ,SAChD,mBAAKgB,MAAO,CACNC,MAAO,QACPC,OAAQ,QACRC,WAAY,aAKpB,iBAAQ,CACN,GAAM,0BADR,0BAGA,8HACA,+CAA8B,0BAAYlB,WAAW,KAAvB,kBAA9B,mDAA4I,mBAAGA,WAAW,KAAQ,CAC9J,KAAQ,yBADgI,yBAG5I,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oSAA6SC,SAAO,GACrVL,QACAH,kBACAS,oBACAC,eACAC,aACAC,cACAC,UACAnB,SACAE,YATqV,gBAUrVI,IAVqV,EAWrVH,eAXqV,GAYpVO,QAAQ,cACb,YAAC,IAAD,CAAUU,UAAWF,IAAUG,KAAMX,QAAQ,YAC3C,YAAC,IAAD,CAAOY,GAAI,CACLC,EAAG,SACFC,SAAU,EAAGC,KAAM,SAAAF,GAAC,OAAIA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAIO,KAAKC,KAAK,EAAIR,EAAI,EAAG,GAAK,GAAGb,QAAQ,SACpG,mBAAKgB,MAAO,CACNC,MAAO,QACPC,OAAQ,QACRC,WAAY,mB,2MASxBtB,EAAWyB,gBAAiB","file":"component---src-instructions-easing-mdx-fcbbe697db68c398d479.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground } from 'docz';\nimport { Controls, PlayState, Tween } from './../../../react-gsap/src/';\nimport { gsap } from 'gsap';\nimport { SlowMo } from 'gsap/EasePack';\ngsap.registerPlugin(SlowMo);\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"easing\"\n    }}>{`Easing`}</h1>\n    <p>{`With GSAP 3 the easing functions are more easily usable as string without importing. They can be used in the \"ease\" prop of the `}<inlineCode parentName=\"p\">{`Tween`}</inlineCode>{`.`}</p>\n    <p>{`Have a look at the docs: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/Eases\"\n      }}>{`https://greensock.com/docs/v3/Eases`}</a></p>\n    <p>{`The default is `}<inlineCode parentName=\"p\">{`power1.out`}</inlineCode>{`. You can overide the defaults if you want: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/GSAP/gsap.defaults()\"\n      }}>{`https://greensock.com/docs/v3/GSAP/gsap.defaults()`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Controls, PlayState, Tween } from 'react-gsap';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ease-function-with-parameters\"\n    }}>{`Ease function with parameters`}</h2>\n    <Playground __position={0} __code={'<Controls playState={PlayState.stop}>\\n  <Tween to={{ x: \\'200px\\' }} duration={2} ease=\\\"elastic.out(0.9, 0.1)\\\">\\n    <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n  </Tween>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Controls,\n      PlayState,\n      Tween,\n      gsap,\n      SlowMo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Tween to={{\n          x: '200px'\n        }} duration={2} ease=\"elastic.out(0.9, 0.1)\" mdxType=\"Tween\">\n      <div style={{\n            width: '100px',\n            height: '100px',\n            background: '#ccc'\n          }} />\n    </Tween>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"slowmo-ease\"\n    }}>{`SlowMo ease`}</h2>\n    <p>{`This is an extra ease that has to be registered first:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { gsap } from 'gsap';\nimport { SlowMo } from 'gsap/EasePack';\n\ngsap.registerPlugin(SlowMo);\n`}</code></pre>\n    <Playground __position={1} __code={'<Controls playState={PlayState.stop}>\\n  <Tween to={{ x: \\'200px\\' }} duration={2} ease=\\\"slow(0.5, 0.8)\\\">\\n    <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n  </Tween>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Controls,\n      PlayState,\n      Tween,\n      gsap,\n      SlowMo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Tween to={{\n          x: '200px'\n        }} duration={2} ease=\"slow(0.5, 0.8)\" mdxType=\"Tween\">\n      <div style={{\n            width: '100px',\n            height: '100px',\n            background: '#ccc'\n          }} />\n    </Tween>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-easing-function\"\n    }}>{`Custom easing function`}</h2>\n    <p>{`You can also pass a function to the ease prop. In this way you can have your custom easing functions.`}</p>\n    <p>{`In the example it's an `}<inlineCode parentName=\"p\">{`easeInOutQuart`}</inlineCode>{`. Take a look at this resource for inspiration: `}<a parentName=\"p\" {...{\n        \"href\": \"https://easings.net/\"\n      }}>{`https://easings.net/`}</a></p>\n    <Playground __position={2} __code={'<Controls playState={PlayState.stop}>\\n  <Tween\\n    to={{ x: \\'200px\\' }}\\n    duration={2}\\n    ease={x =>\\n      x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2\\n    }\\n  >\\n    <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n  </Tween>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Controls,\n      PlayState,\n      Tween,\n      gsap,\n      SlowMo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Tween to={{\n          x: '200px'\n        }} duration={2} ease={x => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2} mdxType=\"Tween\">\n      <div style={{\n            width: '100px',\n            height: '100px',\n            background: '#ccc'\n          }} />\n    </Tween>\n  </Controls>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}