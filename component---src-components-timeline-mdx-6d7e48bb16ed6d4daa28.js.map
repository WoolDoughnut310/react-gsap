{"version":3,"sources":["webpack:///../src/components/Timeline.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","Props","Controls","PlayState","Timeline","TimelinePropsDummy","TargetWithNames","Tween","playState","stop","target","style","width","height","background","from","opacity","to","duration","x","rotation","position","stagger","scaleX","scaleY","labels","label","isMDXComponent"],"mappings":"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","file":"component---src-components-timeline-mdx-6d7e48bb16ed6d4daa28.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Controls, PlayState } from './../../../react-gsap/src/';\nimport { Timeline, TimelinePropsDummy, TargetWithNames } from './Timeline';\nimport { Tween } from './Tween';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"timeline\"\n    }}>{`Timeline`}</h1>\n    <p>{`The Timeline component uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/GSAP/Timeline\"\n      }}>{`gsap.timeline()`}</a>{` function internally.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Controls, PlayState, Timeline, Tween } from 'react-gsap';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`You can add a target and control it with childless Tween components. The target needs to be a \"refable\" component.\nSo it can be a HTML element or a forwardRef component like a styled-components component.`}</p>\n    <Playground __position={0} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline\\n    target={\\n      <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n    }\\n  >\\n    <Tween from={{ opacity: 0 }} to={{ opacity: 1 }} duration={2} />\\n    <Tween to={{ x: \\'200px\\' }} />\\n    <Tween to={{ rotation: 180 }} position=\\\"+=1\\\" />\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      TimelinePropsDummy,\n      TargetWithNames,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline target={<div style={{\n          width: '100px',\n          height: '100px',\n          background: '#ccc'\n        }} />} mdxType=\"Timeline\">\n      <Tween from={{\n            opacity: 0\n          }} to={{\n            opacity: 1\n          }} duration={2} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} mdxType=\"Tween\" />\n      <Tween to={{\n            rotation: 180\n          }} position=\"+=1\" mdxType=\"Tween\" />\n    </Timeline>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"other-tweens\"\n    }}>{`Other Tweens`}</h2>\n    <p>{`You can also add other normal Tweens.`}</p>\n    <Playground __position={1} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline\\n    target={\\n      <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n    }\\n  >\\n    <Tween from={{ opacity: 0 }} to={{ opacity: 1 }} duration={2} />\\n    <Tween to={{ x: \\'200px\\' }} />\\n    <Tween to={{ x: \\'200px\\' }} duration={1}>\\n      <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'red\\' }} />\\n    </Tween>\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      TimelinePropsDummy,\n      TargetWithNames,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline target={<div style={{\n          width: '100px',\n          height: '100px',\n          background: '#ccc'\n        }} />} mdxType=\"Timeline\">\n      <Tween from={{\n            opacity: 0\n          }} to={{\n            opacity: 1\n          }} duration={2} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} duration={1} mdxType=\"Tween\">\n        <div style={{\n              width: '100px',\n              height: '100px',\n              background: 'red'\n            }} />\n      </Tween>\n    </Timeline>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"multiple-targets\"\n    }}>{`Multiple targets`}</h2>\n    <p>{`You can wrap multiple target components in a Fragment and target them with the array index with the `}<inlineCode parentName=\"p\">{`target`}</inlineCode>{` prop from the Tween component.\nIf you don't add a target you transform all target components.`}</p>\n    <Playground __position={2} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline\\n    target={\\n      <Fragment>\\n        <div\\n          style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }}\\n        />\\n        <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'red\\' }} />\\n      </Fragment>\\n    }\\n  >\\n    <Tween to={{ x: \\'100px\\' }} target={0} />\\n    <Tween to={{ x: \\'100px\\' }} target={1} />\\n    <Tween to={{ x: \\'200px\\' }} target={0} />\\n    <Tween to={{ x: \\'200px\\' }} target={1} />\\n    <Tween to={{ opacity: 0 }} />\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      TimelinePropsDummy,\n      TargetWithNames,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline target={<Fragment mdxType=\"Fragment\">\n          <div style={{\n            width: '100px',\n            height: '100px',\n            background: '#ccc'\n          }} />\n          <div style={{\n            width: '100px',\n            height: '100px',\n            background: 'red'\n          }} />\n        </Fragment>} mdxType=\"Timeline\">\n      <Tween to={{\n            x: '100px'\n          }} target={0} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '100px'\n          }} target={1} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} target={0} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} target={1} mdxType=\"Tween\" />\n      <Tween to={{\n            opacity: 0\n          }} mdxType=\"Tween\" />\n    </Timeline>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"advanced-multiple-targets\"\n    }}>{`Advanced multiple targets`}</h2>\n    <p>{`If you need to target individual elements you can use a special forwardRef component with useImperativeHandle hook.`}</p>\n    <p>{`In this way these component can be better reused and the refs not only work in a Timeline target context.`}</p>\n    <p>{`You can also pass an array ref like seen with div2. In this way you can use the `}<inlineCode parentName=\"p\">{`stagger`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const TargetWithNames = forwardRef((props, ref) => {\n  const div1 = useRef(null);\n  const div2 = useRef([]);\n  const div3 = useRef(null);\n  useImperativeHandle(ref, () => ({\n    div1,\n    div2,\n    div3,\n  }));\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h3 ref={div1}>THIS</h3>\n      <SplitChars\n        ref={charRef => div2.current.push(charRef)}\n        wrapper={<h3 style={{ display: 'inline-block' }} />}\n      >\n        TEST\n      </SplitChars>\n      <h3 ref={div3}>IS A</h3>\n    </div>\n  );\n});\n\n`}</code></pre>\n    <p>{`If you want to combine multiple of those named components, you can do it like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const TargetWithNamesCombined = forwardRef((props, ref) => {\n  const target1 = useRef({});\n  const target2 = useRef({});\n  useImperativeHandle(ref, () => ({\n    ...target1.current,\n    ...target2.current,\n  }));\n  return (\n    <>\n      <TargetWithNames1 ref={target1} />\n      <TargetWithNames2 ref={target2} />\n    </>\n  );\n});\n\n`}</code></pre>\n    <p>{`For version < 3:`}</p>\n    <p>{`If you need to target individual elements you can use a special forwardRef function.\nThe `}<inlineCode parentName=\"p\">{`targets`}</inlineCode>{` parameter provide the `}<inlineCode parentName=\"p\">{`set`}</inlineCode>{` function, which you can use to set a ref to a certain key.`}</p>\n    <p>{`If you use an array as value, as seen in the example, you can save multiple elements as array under one key and use e.g. the `}<inlineCode parentName=\"p\">{`stagger`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const TargetWithNames = forwardRef((props, targets) => (\n  <div style={{ textAlign: 'center' }}>\n    <h3 ref={div => targets.set('div1', div)}>THIS</h3>\n    <SplitChars\n      ref={(div: ReactElement) => targets.set('div2', [div])}\n      wrapper={<h3 style={{ display: 'inline-block' }} />}\n    >\n      TEST\n    </SplitChars>\n    <h3 ref={div => targets.set('div3', div)}>IS A</h3>\n  </div>\n));\n\n`}</code></pre>\n    <Playground __position={3} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline target={<TargetWithNames />}>\\n    <Tween from={{ x: \\'-100vw\\' }} target=\\\"div1\\\" position=\\\"0\\\" />\\n    <Tween from={{ x: \\'-100vw\\' }} target=\\\"div2\\\" position=\\\"2\\\" stagger={0.1} />\\n    <Tween from={{ x: \\'-100vw\\' }} target=\\\"div3\\\" position=\\\"1\\\" />\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      TimelinePropsDummy,\n      TargetWithNames,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline target={<TargetWithNames mdxType=\"TargetWithNames\" />} mdxType=\"Timeline\">\n      <Tween from={{\n            x: '-100vw'\n          }} target=\"div1\" position=\"0\" mdxType=\"Tween\" />\n      <Tween from={{\n            x: '-100vw'\n          }} target=\"div2\" position=\"2\" stagger={0.1} mdxType=\"Tween\" />\n      <Tween from={{\n            x: '-100vw'\n          }} target=\"div3\" position=\"1\" mdxType=\"Tween\" />\n    </Timeline>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"nested-timelines\"\n    }}>{`Nested Timelines`}</h2>\n    <p>{`You can nest other Timelines or HTML structures.`}</p>\n    <Playground __position={4} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline\\n    target={\\n      <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n    }\\n  >\\n    <Tween from={{ scaleX: 0.5, scaleY: 0.5 }} duration={2} />\\n    <Tween to={{ x: \\'200px\\' }} />\\n    <div>\\n      <p>Other Timeline:</p>\\n      <Timeline\\n        target={\\n          <div\\n            style={{ width: \\'100px\\', height: \\'100px\\', background: \\'red\\' }}\\n          />\\n        }\\n      >\\n        <Tween from={{ scaleX: 0.5, scaleY: 0.5 }} duration={2} />\\n        <Tween to={{ x: \\'200px\\' }} />\\n      </Timeline>\\n    </div>\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      TimelinePropsDummy,\n      TargetWithNames,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline target={<div style={{\n          width: '100px',\n          height: '100px',\n          background: '#ccc'\n        }} />} mdxType=\"Timeline\">\n      <Tween from={{\n            scaleX: 0.5,\n            scaleY: 0.5\n          }} duration={2} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} mdxType=\"Tween\" />\n      <div>\n        <p>Other Timeline:</p>\n        <Timeline target={<div style={{\n              width: '100px',\n              height: '100px',\n              background: 'red'\n            }} />} mdxType=\"Timeline\">\n          <Tween from={{\n                scaleX: 0.5,\n                scaleY: 0.5\n              }} duration={2} mdxType=\"Tween\" />\n          <Tween to={{\n                x: '200px'\n              }} mdxType=\"Tween\" />\n        </Timeline>\n      </div>\n    </Timeline>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"label-support\"\n    }}>{`Label support`}</h2>\n    <p>{`You can add labels to the timeline and use them in the position prop of the Tweens or nested Timelines.`}</p>\n    <p>{`More info: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/GSAP/Timeline/addLabel()\"\n      }}>{`https://greensock.com/docs/v3/GSAP/Timeline/addLabel()`}</a></p>\n    <Playground __position={5} __code={'<Controls playState={PlayState.stop}>\\n  <Timeline\\n    target={\\n      <div style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }} />\\n    }\\n    labels={[\\n      {\\n        label: \\'sec4\\',\\n        position: 4,\\n      },\\n      {\\n        label: \\'sec6\\',\\n        position: 6,\\n      },\\n    ]}\\n  >\\n    <Tween from={{ opacity: 0 }} to={{ opacity: 1 }} duration={2} />\\n    <Tween to={{ x: \\'200px\\' }} />\\n    <Tween to={{ rotation: 180 }} position=\\\"sec4\\\" />\\n    <Tween to={{ x: \\'0px\\' }} position=\\\"sec6\\\" />\\n  </Timeline>\\n</Controls>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      Props,\n      Controls,\n      PlayState,\n      Timeline,\n      TimelinePropsDummy,\n      TargetWithNames,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Controls playState={PlayState.stop} mdxType=\"Controls\">\n    <Timeline target={<div style={{\n          width: '100px',\n          height: '100px',\n          background: '#ccc'\n        }} />} labels={[{\n          label: 'sec4',\n          position: 4\n        }, {\n          label: 'sec6',\n          position: 6\n        }]} mdxType=\"Timeline\">\n      <Tween from={{\n            opacity: 0\n          }} to={{\n            opacity: 1\n          }} duration={2} mdxType=\"Tween\" />\n      <Tween to={{\n            x: '200px'\n          }} mdxType=\"Tween\" />\n      <Tween to={{\n            rotation: 180\n          }} position=\"sec4\" mdxType=\"Tween\" />\n      <Tween to={{\n            x: '0px'\n          }} position=\"sec6\" mdxType=\"Tween\" />\n    </Timeline>\n  </Controls>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p>{`The question mark means it's an optional prop.`}</p>\n    <p>{`For all available props check out the documentation: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/GSAP/Timeline/vars\"\n      }}>{`vars`}</a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Can be any component type. But Tween and other Timeline components are controlled by this Timeline`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`wrapper?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`React.ReactElement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`This component gets wrapped around the Timeline component`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`target?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`React.ReactElement `}{`|`}{` null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The target component that gets outputted and tweened from all childless Tween child components`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`position?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string `}{`|`}{` number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`If this Timeline is a child from another Timeline it's added at this position`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`labels?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Label[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Can be used to give the positions a name`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`duration?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Adjusts the Timeline's timeScale to fit it within the specified duration (Can be changed on-the-fly)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`progress?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0 - 1 (Can be changed on-the-fly)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`totalProgress?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0 - 1 (Can be changed on-the-fly)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`playState?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`PlayState`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Use it to control the playing state (Can be changed on-the-fly)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`[prop: string]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`All other props are added to the vars object for the gsap.timeline function`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"type-label\"\n    }}>{`Type Label`}</h2>\n    <p>{`More info: `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v3/GSAP/Timeline/addLabel()\"\n      }}>{`https://greensock.com/docs/v3/GSAP/Timeline/addLabel()`}</a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`label`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`position`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string `}{`|`}{` number`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"enum-playstate\"\n    }}>{`Enum PlayState`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Field`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`As string`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`play`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`\"play\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`reverse`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`\"reverse\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`stop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`\"stop\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`pause`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`\"pause\"`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}