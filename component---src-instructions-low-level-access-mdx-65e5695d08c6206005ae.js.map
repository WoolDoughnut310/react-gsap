{"version":3,"sources":["webpack:///../src/instructions/LowLevelAccess.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Fragment","Playground","PlayState","Tween","tween","React","ref","to","x","duration","playState","stop","style","width","height","background","onClick","current","getGSAP","play","seek","pause","isMDXComponent"],"mappings":"6gBASO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,gIACgC,0BAAYC,WAAW,KAAvB,SADhC,OACyF,0BAAYA,WAAW,KAAvB,YADzF,2BACyK,0BAAYA,WAAW,KAAvB,SADzK,OACkO,0BAAYA,WAAW,KAAvB,YADlO,6DAEA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,qDAEL,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mkBAA4kBC,SAAO,GACpnBL,QACAH,kBACAS,oBACAC,eACAC,cACAC,WANonB,gBAOpnBZ,IAPonB,EAQpnBH,eARonB,GASnnBO,QAAQ,eACZ,WACK,IAAMS,EAAQC,SAAa,MAC3B,OAAO,YAAC,WAAD,CAAUV,QAAQ,YACzB,YAAC,IAAD,CAAOW,IAAKF,EAAOG,GAAI,CACnBC,EAAG,SACFC,SAAU,EAAGC,UAAWR,IAAUS,KAAMhB,QAAQ,SACnD,mBAAKiB,MAAO,CACRC,MAAO,QACPC,OAAQ,QACRC,WAAY,WAGlB,sBAAQC,QAAS,kBAAMZ,EAAMa,QAAQC,UAAUC,KAAK,KAApD,QAGA,sBAAQH,QAAS,kBAAMZ,EAAMa,QAAQC,UAAUE,KAAK,KAApD,QAGA,sBAAQJ,QAAS,kBAAMZ,EAAMa,QAAQC,UAAUG,MAAM,KAArD,kB,mNAUR7B,EAAW8B,gBAAiB","file":"component---src-instructions-low-level-access-mdx-65e5695d08c6206005ae.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Projekte/Experimente/github/react-gsap/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport { Playground } from 'docz';\nimport { PlayState, Tween } from './../../../react-gsap/src/';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"low-level-access\"\n    }}>{`Low-level access`}</h1>\n    <p>{`You are able to use the complete API of the underlying GSAP objects.\nJust add a reference to the React `}<inlineCode parentName=\"p\">{`Tween`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Timeline`}</inlineCode>{` components and get the `}<inlineCode parentName=\"p\">{`Tween`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Timeline`}</inlineCode>{` objects from GSAP by calling the getGSAP() method on it:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { PlayState, Tween } from 'react-gsap';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usage-with-tween\"\n    }}>{`Usage with Tween`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const tween = React.useRef(null)\\n  return (\\n    <Fragment>\\n      <Tween\\n        ref={tween}\\n        to={{ x: \\'200px\\' }}\\n        duration={2}\\n        playState={PlayState.stop}\\n      >\\n        <div\\n          style={{ width: \\'100px\\', height: \\'100px\\', background: \\'#ccc\\' }}\\n        />\\n      </Tween>\\n      <button onClick={() => tween.current.getGSAP().play(0)}>Play</button>\\n      <button onClick={() => tween.current.getGSAP().seek(1)}>Seek</button>\\n      <button onClick={() => tween.current.getGSAP().pause(0)}>Stop</button>\\n    </Fragment>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Playground,\n      PlayState,\n      Tween,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const tween = React.useRef(null);\n        return <Fragment mdxType=\"Fragment\">\n        <Tween ref={tween} to={{\n            x: '200px'\n          }} duration={2} playState={PlayState.stop} mdxType=\"Tween\">\n          <div style={{\n              width: '100px',\n              height: '100px',\n              background: '#ccc'\n            }} />\n        </Tween>\n        <button onClick={() => tween.current.getGSAP().play(0)}>\n          Play\n        </button>\n        <button onClick={() => tween.current.getGSAP().seek(1)}>\n          Seek\n        </button>\n        <button onClick={() => tween.current.getGSAP().pause(0)}>\n          Stop\n        </button>\n      </Fragment>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}